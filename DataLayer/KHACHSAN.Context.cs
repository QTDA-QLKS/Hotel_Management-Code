

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DataLayer
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Entity.Core.Objects;
using System.Linq;


public partial class Entities : DbContext
{
    public Entities()
        : base("name=Entities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public virtual DbSet<sysdiagram> sysdiagrams { get; set; }

    public virtual DbSet<tb_CongTy> tb_CongTy { get; set; }

    public virtual DbSet<tb_DatPhong> tb_DatPhong { get; set; }

    public virtual DbSet<tb_DatPhong_CT> tb_DatPhong_CT { get; set; }

    public virtual DbSet<tb_DatPhong_SanPham> tb_DatPhong_SanPham { get; set; }

    public virtual DbSet<tb_DonVi> tb_DonVi { get; set; }

    public virtual DbSet<tb_KhachHang> tb_KhachHang { get; set; }

    public virtual DbSet<tb_LoaiPhong> tb_LoaiPhong { get; set; }

    public virtual DbSet<tb_Param> tb_Param { get; set; }

    public virtual DbSet<tb_Phong> tb_Phong { get; set; }

    public virtual DbSet<tb_Phong_ThietBi> tb_Phong_ThietBi { get; set; }

    public virtual DbSet<tb_SanPham> tb_SanPham { get; set; }

    public virtual DbSet<tb_SYS_FUNC> tb_SYS_FUNC { get; set; }

    public virtual DbSet<tb_SYS_GROUP> tb_SYS_GROUP { get; set; }

    public virtual DbSet<tb_SYS_REPORT> tb_SYS_REPORT { get; set; }

    public virtual DbSet<tb_SYS_RIGHT> tb_SYS_RIGHT { get; set; }

    public virtual DbSet<tb_SYS_RIGHT_REP> tb_SYS_RIGHT_REP { get; set; }

    public virtual DbSet<tb_SYS_USER> tb_SYS_USER { get; set; }

    public virtual DbSet<tb_Tang> tb_Tang { get; set; }

    public virtual DbSet<tb_ThietBi> tb_ThietBi { get; set; }

    public virtual DbSet<V_FUNC_SYS_RIGHT> V_FUNC_SYS_RIGHT { get; set; }

    public virtual DbSet<V_REP_SYS_RIGHT_REP> V_REP_SYS_RIGHT_REP { get; set; }

    public virtual DbSet<V_USER_IN_GROUP> V_USER_IN_GROUP { get; set; }

    public virtual DbSet<V_USER_NOTIN_GROUP> V_USER_NOTIN_GROUP { get; set; }


    public virtual ObjectResult<PHIEU_DATPHONG_Result> PHIEU_DATPHONG(Nullable<int> iDDP)
    {

        var iDDPParameter = iDDP.HasValue ?
            new ObjectParameter("IDDP", iDDP) :
            new ObjectParameter("IDDP", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PHIEU_DATPHONG_Result>("PHIEU_DATPHONG", iDDPParameter);
    }


    public virtual int REP_DOANHTHU_CONGTY_NGAY(Nullable<System.DateTime> nGAYD, Nullable<System.DateTime> nGAYC, string mACTY)
    {

        var nGAYDParameter = nGAYD.HasValue ?
            new ObjectParameter("NGAYD", nGAYD) :
            new ObjectParameter("NGAYD", typeof(System.DateTime));


        var nGAYCParameter = nGAYC.HasValue ?
            new ObjectParameter("NGAYC", nGAYC) :
            new ObjectParameter("NGAYC", typeof(System.DateTime));


        var mACTYParameter = mACTY != null ?
            new ObjectParameter("MACTY", mACTY) :
            new ObjectParameter("MACTY", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REP_DOANHTHU_CONGTY_NGAY", nGAYDParameter, nGAYCParameter, mACTYParameter);
    }


    public virtual int REP_DOANHTHU_DONVI_NGAY(Nullable<System.DateTime> nGAYD, Nullable<System.DateTime> nGAYC, string mACTY, string mADVI)
    {

        var nGAYDParameter = nGAYD.HasValue ?
            new ObjectParameter("NGAYD", nGAYD) :
            new ObjectParameter("NGAYD", typeof(System.DateTime));


        var nGAYCParameter = nGAYC.HasValue ?
            new ObjectParameter("NGAYC", nGAYC) :
            new ObjectParameter("NGAYC", typeof(System.DateTime));


        var mACTYParameter = mACTY != null ?
            new ObjectParameter("MACTY", mACTY) :
            new ObjectParameter("MACTY", typeof(string));


        var mADVIParameter = mADVI != null ?
            new ObjectParameter("MADVI", mADVI) :
            new ObjectParameter("MADVI", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("REP_DOANHTHU_DONVI_NGAY", nGAYDParameter, nGAYCParameter, mACTYParameter, mADVIParameter);
    }


    public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var versionParameter = version.HasValue ?
            new ObjectParameter("version", version) :
            new ObjectParameter("version", typeof(int));


        var definitionParameter = definition != null ?
            new ObjectParameter("definition", definition) :
            new ObjectParameter("definition", typeof(byte[]));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
    }


    public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
    }


    public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
    }


    public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
    {

        var diagramnameParameter = diagramname != null ?
            new ObjectParameter("diagramname", diagramname) :
            new ObjectParameter("diagramname", typeof(string));


        var owner_idParameter = owner_id.HasValue ?
            new ObjectParameter("owner_id", owner_id) :
            new ObjectParameter("owner_id", typeof(int));


        var new_diagramnameParameter = new_diagramname != null ?
            new ObjectParameter("new_diagramname", new_diagramname) :
            new ObjectParameter("new_diagramname", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
    }


    public virtual int sp_upgraddiagrams()
    {

        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
    }

}

}

